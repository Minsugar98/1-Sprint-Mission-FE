{"ast":null,"code":"var _jsxFileName = \"/Users/uesr/Desktop/extra_ms/react-extra-ms/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]); // Initialize state to manage the list of todos\n  const [inputValue, setInputValue] = useState(''); // State to manage the input value\n\n  const addTodoList = () => {\n    if (inputValue.trim() !== '') {\n      setTodos([...todos, inputValue]); // Add new todo to the list\n      setInputValue(''); // Clear the input after adding\n    } else {\n      alert(\"입력해주세요\");\n    }\n  };\n  const handleInputChange = event => {\n    setInputValue(event.target.value); // Update input value as the user types\n  };\n  const deleteTodoList = index => {\n    todos.splice(index, 1);\n    setTodos([...todos]);\n  };\n  const checkTodoList = (index, event) => {\n    const isChecked = event.target.checked;\n    const updatedTodos = todos.map((todo, i) => i === index ? {\n      ...todo,\n      checked: isChecked,\n      style: {\n        color: isChecked ? 'red' : 'black'\n      }\n    } : todo);\n    setTodos(updatedTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      value: inputValue,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addTodoList,\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: `color: red`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.checked,\n          onChange: event => checkTodoList(index, event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 49\n        }, this), todo, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => deleteTodoList(index),\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 159\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+Sy7uGGPQnt+jjrIizbpp5oDotQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","todos","setTodos","inputValue","setInputValue","addTodoList","trim","alert","handleInputChange","event","target","value","deleteTodoList","index","splice","checkTodoList","isChecked","checked","updatedTodos","map","todo","i","style","color","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/Users/uesr/Desktop/extra_ms/react-extra-ms/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [todos, setTodos] = useState([]); // Initialize state to manage the list of todos\n  const [inputValue, setInputValue] = useState(''); // State to manage the input value\n\n  const addTodoList = () => {\n    if (inputValue.trim() !== '') {\n      setTodos([...todos, inputValue]); // Add new todo to the list\n      setInputValue(''); // Clear the input after adding\n      \n    }else{\n      alert(\"입력해주세요\")\n    }\n    \n  };\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value); // Update input value as the user types\n  };\n  \n  const deleteTodoList = (index) => {\n    todos.splice(index, 1);\n    setTodos([...todos]);\n  };\n\n  const checkTodoList = (index, event) => {\n    const isChecked = event.target.checked;\n    const updatedTodos = todos.map((todo, i) =>\n      i === index\n        ? { ...todo, checked: isChecked, style: { color: isChecked ? 'red' : 'black' } }\n        : todo\n    );\n\n    setTodos(updatedTodos);\n\n    \n  };\n\n  return (\n    <div className=\"App\">\n      <input\n        className=\"input\"\n        value={inputValue}\n        onChange={handleInputChange}\n      />\n      <button type=\"button\" onClick={addTodoList}>추가</button>\n      \n      <div>\n        {todos.map((todo, index) => (\n          <li key={index} style ={`color: red`}><input type=\"checkbox\" checked={todo.checked} onChange={(event) => checkTodoList(index, event)}></input>{todo}<button type=\"button\" onClick={() =>deleteTodoList(index)}>삭제</button></li>\n        ))}\n      </div>\n    \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}