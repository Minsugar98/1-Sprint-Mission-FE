{"ast":null,"code":"var _jsxFileName = \"/Users/uesr/Desktop/extra_ms/react-extra-ms/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  const addTodoList = () => {\n    if (inputValue.trim()) {\n      setTodos([...todos, {\n        text: inputValue,\n        style: {\n          color: 'black'\n        },\n        checked: false\n      }]);\n      setInputValue('');\n    }\n  };\n  const checkTodoList = (index, event) => {\n    const isChecked = event.target.checked;\n\n    // 새로운 todos 배열을 생성하여 상태를 업데이트합니다.\n    const updatedTodos = todos.map((todo, i) => i === index ? {\n      ...todo,\n      checked: isChecked,\n      style: {\n        color: isChecked ? 'red' : 'black'\n      }\n    } : todo);\n    setTodos(updatedTodos);\n  };\n  const deleteTodoList = index => {\n    // 특정 인덱스의 항목을 제외한 새로운 todos 배열을 생성하여 상태를 업데이트합니다.\n    const updatedTodos = todos.filter((_, i) => i !== index);\n    setTodos(updatedTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      value: inputValue,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addTodoList,\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: todo.style,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.checked,\n          onChange: event => checkTodoList(index, event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), todo.text, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => deleteTodoList(index),\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"+Sy7uGGPQnt+jjrIizbpp5oDotQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","todos","setTodos","inputValue","setInputValue","handleInputChange","event","target","value","addTodoList","trim","text","style","color","checked","checkTodoList","index","isChecked","updatedTodos","map","todo","i","deleteTodoList","filter","_","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/Users/uesr/Desktop/extra_ms/react-extra-ms/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const addTodoList = () => {\n    if (inputValue.trim()) {\n      setTodos([...todos, { text: inputValue, style: { color: 'black' }, checked: false }]);\n      setInputValue('');\n    }\n  };\n\n  const checkTodoList = (index, event) => {\n    const isChecked = event.target.checked;\n\n    // 새로운 todos 배열을 생성하여 상태를 업데이트합니다.\n    const updatedTodos = todos.map((todo, i) =>\n      i === index\n        ? { ...todo, checked: isChecked, style: { color: isChecked ? 'red' : 'black' } }\n        : todo\n    );\n\n    setTodos(updatedTodos);\n  };\n\n  const deleteTodoList = (index) => {\n    // 특정 인덱스의 항목을 제외한 새로운 todos 배열을 생성하여 상태를 업데이트합니다.\n    const updatedTodos = todos.filter((_, i) => i !== index);\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <div className=\"App\">\n      <input\n        className=\"input\"\n        value={inputValue}\n        onChange={handleInputChange}\n      />\n      <button type=\"button\" onClick={addTodoList}>추가</button>\n      \n      <ul>\n        {todos.map((todo, index) => (\n          <li key={index} style={todo.style}>\n            <input\n              type=\"checkbox\"\n              checked={todo.checked}\n              onChange={(event) => checkTodoList(index, event)}\n            />\n            {todo.text}\n            <button type=\"button\" onClick={() => deleteTodoList(index)}>삭제</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACnCF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIN,UAAU,CAACO,IAAI,CAAC,CAAC,EAAE;MACrBR,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;QAAEU,IAAI,EAAER,UAAU;QAAES,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAC;QAAEC,OAAO,EAAE;MAAM,CAAC,CAAC,CAAC;MACrFV,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,MAAMW,aAAa,GAAGA,CAACC,KAAK,EAAEV,KAAK,KAAK;IACtC,MAAMW,SAAS,GAAGX,KAAK,CAACC,MAAM,CAACO,OAAO;;IAEtC;IACA,MAAMI,YAAY,GAAGjB,KAAK,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KACrCA,CAAC,KAAKL,KAAK,GACP;MAAE,GAAGI,IAAI;MAAEN,OAAO,EAAEG,SAAS;MAAEL,KAAK,EAAE;QAAEC,KAAK,EAAEI,SAAS,GAAG,KAAK,GAAG;MAAQ;IAAE,CAAC,GAC9EG,IACN,CAAC;IAEDlB,QAAQ,CAACgB,YAAY,CAAC;EACxB,CAAC;EAED,MAAMI,cAAc,GAAIN,KAAK,IAAK;IAChC;IACA,MAAME,YAAY,GAAGjB,KAAK,CAACsB,MAAM,CAAC,CAACC,CAAC,EAAEH,CAAC,KAAKA,CAAC,KAAKL,KAAK,CAAC;IACxDd,QAAQ,CAACgB,YAAY,CAAC;EACxB,CAAC;EAED,oBACEpB,OAAA;IAAK2B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB5B,OAAA;MACE2B,SAAS,EAAC,OAAO;MACjBjB,KAAK,EAAEL,UAAW;MAClBwB,QAAQ,EAAEtB;IAAkB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFjC,OAAA;MAAQkC,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAExB,WAAY;MAAAiB,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEvDjC,OAAA;MAAA4B,QAAA,EACGzB,KAAK,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEJ,KAAK,kBACrBlB,OAAA;QAAgBc,KAAK,EAAEQ,IAAI,CAACR,KAAM;QAAAc,QAAA,gBAChC5B,OAAA;UACEkC,IAAI,EAAC,UAAU;UACflB,OAAO,EAAEM,IAAI,CAACN,OAAQ;UACtBa,QAAQ,EAAGrB,KAAK,IAAKS,aAAa,CAACC,KAAK,EAAEV,KAAK;QAAE;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC,EACDX,IAAI,CAACT,IAAI,eACVb,OAAA;UAAQkC,IAAI,EAAC,QAAQ;UAACC,OAAO,EAAEA,CAAA,KAAMX,cAAc,CAACN,KAAK,CAAE;UAAAU,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAPhEf,KAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAA/B,EAAA,CA1DKD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA4DT,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}